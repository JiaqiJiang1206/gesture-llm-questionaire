import {
  __commonJS
} from "./chunk-P2LSHJDD.js";

// node_modules/vue-confetti/dist/vue-confetti.js
var require_vue_confetti = __commonJS({
  "node_modules/vue-confetti/dist/vue-confetti.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports["vue-confetti"] = e() : t["vue-confetti"] = e();
    }(self, function() {
      return (() => {
        "use strict";
        var t = { d: (e2, n2) => {
          for (var i2 in n2)
            t.o(n2, i2) && !t.o(e2, i2) && Object.defineProperty(e2, i2, { enumerable: true, get: n2[i2] });
        }, o: (t2, e2) => Object.prototype.hasOwnProperty.call(t2, e2), r: (t2) => {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t2, "__esModule", { value: true });
        } }, e = {};
        t.r(e), t.d(e, { Confetti: () => $, default: () => U });
        const n = function() {
          var t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t2 + 1, n2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], i2 = parseFloat(t2), r2 = parseFloat(e2), o2 = Math.random() * (r2 - i2) + i2;
          return n2 ? Math.round(o2) : o2;
        };
        function i(t2, e2) {
          if (!(t2 instanceof e2))
            throw new TypeError("Cannot call a class as a function");
        }
        function r(t2, e2) {
          for (var n2 = 0; n2 < e2.length; n2++) {
            var i2 = e2[n2];
            i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
          }
        }
        var o = function() {
          function t2() {
            var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n2 = e3.color, r2 = void 0 === n2 ? "blue" : n2, o3 = e3.size, a2 = void 0 === o3 ? 10 : o3, c2 = e3.dropRate, s2 = void 0 === c2 ? 10 : c2;
            i(this, t2), this.color = r2, this.size = a2, this.dropRate = s2;
          }
          var e2, o2;
          return e2 = t2, (o2 = [{ key: "setup", value: function(t3) {
            var e3 = t3.canvas, i2 = t3.wind, r2 = t3.windPosCoef, o3 = t3.windSpeedMax, a2 = t3.count;
            return this.canvas = e3, this.wind = i2, this.windPosCoef = r2, this.windSpeedMax = o3, this.x = n(-35, this.canvas.width + 35), this.y = n(-30, -35), this.d = n(150) + 10, this.particleSize = n(this.size, 2 * this.size), this.tilt = n(10), this.tiltAngleIncremental = (n(0, 0.08) + 0.04) * (n() < 0.5 ? -1 : 1), this.tiltAngle = 0, this.angle = n(2 * Math.PI), this.count = a2 + 1, this.remove = false, this;
          } }, { key: "update", value: function() {
            this.tiltAngle += this.tiltAngleIncremental * (0.2 * Math.cos(this.wind + (this.d + this.x + this.y) * this.windPosCoef) + 1), this.y += (Math.cos(this.angle + this.d) + parseInt(this.dropRate, 10)) / 2, this.x += (Math.sin(this.angle) + Math.cos(this.wind + (this.d + this.x + this.y) * this.windPosCoef)) * this.windSpeedMax, this.y += Math.sin(this.wind + (this.d + this.x + this.y) * this.windPosCoef) * this.windSpeedMax, this.tilt = 15 * Math.sin(this.tiltAngle - this.count / 3);
          } }, { key: "pastBottom", value: function() {
            return this.y > this.canvas.height;
          } }, { key: "draw", value: function() {
            this.canvas.ctx.fillStyle = this.color, this.canvas.ctx.beginPath(), this.canvas.ctx.setTransform(Math.cos(this.tiltAngle), Math.sin(this.tiltAngle), 0, 1, this.x, this.y);
          } }, { key: "kill", value: function() {
            this.remove = true;
          } }]) && r(e2.prototype, o2), t2;
        }();
        function a(t2) {
          return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
            return typeof t3;
          } : function(t3) {
            return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
          }, a(t2);
        }
        function c(t2, e2) {
          if (!(t2 instanceof e2))
            throw new TypeError("Cannot call a class as a function");
        }
        function s(t2, e2) {
          for (var n2 = 0; n2 < e2.length; n2++) {
            var i2 = e2[n2];
            i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
          }
        }
        function l(t2, e2, n2) {
          return l = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(t3, e3, n3) {
            var i2 = function(t4, e4) {
              for (; !Object.prototype.hasOwnProperty.call(t4, e4) && null !== (t4 = h(t4)); )
                ;
              return t4;
            }(t3, e3);
            if (i2) {
              var r2 = Object.getOwnPropertyDescriptor(i2, e3);
              return r2.get ? r2.get.call(n3) : r2.value;
            }
          }, l(t2, e2, n2 || t2);
        }
        function u(t2, e2) {
          return u = Object.setPrototypeOf || function(t3, e3) {
            return t3.__proto__ = e3, t3;
          }, u(t2, e2);
        }
        function f(t2, e2) {
          return !e2 || "object" !== a(e2) && "function" != typeof e2 ? function(t3) {
            if (void 0 === t3)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t3;
          }(t2) : e2;
        }
        function h(t2) {
          return h = Object.setPrototypeOf ? Object.getPrototypeOf : function(t3) {
            return t3.__proto__ || Object.getPrototypeOf(t3);
          }, h(t2);
        }
        var p = function(t2) {
          !function(t3, e3) {
            if ("function" != typeof e3 && null !== e3)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), e3 && u(t3, e3);
          }(a2, t2);
          var e2, n2, i2, r2, o2 = (i2 = a2, r2 = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if ("function" == typeof Proxy)
              return true;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), true;
            } catch (t3) {
              return false;
            }
          }(), function() {
            var t3, e3 = h(i2);
            if (r2) {
              var n3 = h(this).constructor;
              t3 = Reflect.construct(e3, arguments, n3);
            } else
              t3 = e3.apply(this, arguments);
            return f(this, t3);
          });
          function a2() {
            return c(this, a2), o2.apply(this, arguments);
          }
          return e2 = a2, (n2 = [{ key: "draw", value: function() {
            l(h(a2.prototype), "draw", this).call(this), this.canvas.ctx.arc(0, 0, this.particleSize / 2, 0, 2 * Math.PI, false), this.canvas.ctx.fill();
          } }]) && s(e2.prototype, n2), a2;
        }(o);
        function y(t2) {
          return y = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
            return typeof t3;
          } : function(t3) {
            return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
          }, y(t2);
        }
        function v(t2, e2) {
          if (!(t2 instanceof e2))
            throw new TypeError("Cannot call a class as a function");
        }
        function d(t2, e2) {
          for (var n2 = 0; n2 < e2.length; n2++) {
            var i2 = e2[n2];
            i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
          }
        }
        function m(t2, e2, n2) {
          return m = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(t3, e3, n3) {
            var i2 = function(t4, e4) {
              for (; !Object.prototype.hasOwnProperty.call(t4, e4) && null !== (t4 = g(t4)); )
                ;
              return t4;
            }(t3, e3);
            if (i2) {
              var r2 = Object.getOwnPropertyDescriptor(i2, e3);
              return r2.get ? r2.get.call(n3) : r2.value;
            }
          }, m(t2, e2, n2 || t2);
        }
        function b(t2, e2) {
          return b = Object.setPrototypeOf || function(t3, e3) {
            return t3.__proto__ = e3, t3;
          }, b(t2, e2);
        }
        function w(t2, e2) {
          return !e2 || "object" !== y(e2) && "function" != typeof e2 ? function(t3) {
            if (void 0 === t3)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t3;
          }(t2) : e2;
        }
        function g(t2) {
          return g = Object.setPrototypeOf ? Object.getPrototypeOf : function(t3) {
            return t3.__proto__ || Object.getPrototypeOf(t3);
          }, g(t2);
        }
        var O = function(t2) {
          !function(t3, e3) {
            if ("function" != typeof e3 && null !== e3)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), e3 && b(t3, e3);
          }(a2, t2);
          var e2, n2, i2, r2, o2 = (i2 = a2, r2 = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if ("function" == typeof Proxy)
              return true;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), true;
            } catch (t3) {
              return false;
            }
          }(), function() {
            var t3, e3 = g(i2);
            if (r2) {
              var n3 = g(this).constructor;
              t3 = Reflect.construct(e3, arguments, n3);
            } else
              t3 = e3.apply(this, arguments);
            return w(this, t3);
          });
          function a2() {
            return v(this, a2), o2.apply(this, arguments);
          }
          return e2 = a2, (n2 = [{ key: "draw", value: function() {
            m(g(a2.prototype), "draw", this).call(this), this.canvas.ctx.fillRect(0, 0, this.particleSize, this.particleSize / 2);
          } }]) && d(e2.prototype, n2), a2;
        }(o);
        function P(t2) {
          return P = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
            return typeof t3;
          } : function(t3) {
            return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
          }, P(t2);
        }
        function S(t2, e2) {
          if (!(t2 instanceof e2))
            throw new TypeError("Cannot call a class as a function");
        }
        function E(t2, e2) {
          for (var n2 = 0; n2 < e2.length; n2++) {
            var i2 = e2[n2];
            i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
          }
        }
        function j(t2, e2, n2) {
          return j = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(t3, e3, n3) {
            var i2 = function(t4, e4) {
              for (; !Object.prototype.hasOwnProperty.call(t4, e4) && null !== (t4 = x(t4)); )
                ;
              return t4;
            }(t3, e3);
            if (i2) {
              var r2 = Object.getOwnPropertyDescriptor(i2, e3);
              return r2.get ? r2.get.call(n3) : r2.value;
            }
          }, j(t2, e2, n2 || t2);
        }
        function k(t2, e2) {
          return k = Object.setPrototypeOf || function(t3, e3) {
            return t3.__proto__ = e3, t3;
          }, k(t2, e2);
        }
        function R(t2, e2) {
          return !e2 || "object" !== P(e2) && "function" != typeof e2 ? function(t3) {
            if (void 0 === t3)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t3;
          }(t2) : e2;
        }
        function x(t2) {
          return x = Object.setPrototypeOf ? Object.getPrototypeOf : function(t3) {
            return t3.__proto__ || Object.getPrototypeOf(t3);
          }, x(t2);
        }
        var M = function(t2) {
          !function(t3, e3) {
            if ("function" != typeof e3 && null !== e3)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), e3 && k(t3, e3);
          }(a2, t2);
          var e2, n2, i2, r2, o2 = (i2 = a2, r2 = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if ("function" == typeof Proxy)
              return true;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), true;
            } catch (t3) {
              return false;
            }
          }(), function() {
            var t3, e3 = x(i2);
            if (r2) {
              var n3 = x(this).constructor;
              t3 = Reflect.construct(e3, arguments, n3);
            } else
              t3 = e3.apply(this, arguments);
            return R(this, t3);
          });
          function a2() {
            return S(this, a2), o2.apply(this, arguments);
          }
          return e2 = a2, (n2 = [{ key: "draw", value: function() {
            var t3 = this;
            j(x(a2.prototype), "draw", this).call(this);
            var e3 = function(e4, n3, i3, r3, o3, a3) {
              t3.canvas.ctx.bezierCurveTo(e4 * (t3.particleSize / 200), n3 * (t3.particleSize / 200), i3 * (t3.particleSize / 200), r3 * (t3.particleSize / 200), o3 * (t3.particleSize / 200), a3 * (t3.particleSize / 200));
            };
            this.canvas.ctx.moveTo(37.5 / this.particleSize, 20 / this.particleSize), e3(75, 37, 70, 25, 50, 25), e3(20, 25, 20, 62.5, 20, 62.5), e3(20, 80, 40, 102, 75, 120), e3(110, 102, 130, 80, 130, 62.5), e3(130, 62.5, 130, 25, 100, 25), e3(85, 25, 75, 37, 75, 40), this.canvas.ctx.fill();
          } }]) && E(e2.prototype, n2), a2;
        }(o);
        function C(t2) {
          return C = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
            return typeof t3;
          } : function(t3) {
            return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
          }, C(t2);
        }
        function _(t2, e2) {
          for (var n2 = 0; n2 < e2.length; n2++) {
            var i2 = e2[n2];
            i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
          }
        }
        function I(t2, e2, n2) {
          return I = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(t3, e3, n3) {
            var i2 = function(t4, e4) {
              for (; !Object.prototype.hasOwnProperty.call(t4, e4) && null !== (t4 = z(t4)); )
                ;
              return t4;
            }(t3, e3);
            if (i2) {
              var r2 = Object.getOwnPropertyDescriptor(i2, e3);
              return r2.get ? r2.get.call(n3) : r2.value;
            }
          }, I(t2, e2, n2 || t2);
        }
        function T(t2, e2) {
          return T = Object.setPrototypeOf || function(t3, e3) {
            return t3.__proto__ = e3, t3;
          }, T(t2, e2);
        }
        function D(t2, e2) {
          return !e2 || "object" !== C(e2) && "function" != typeof e2 ? function(t3) {
            if (void 0 === t3)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t3;
          }(t2) : e2;
        }
        function z(t2) {
          return z = Object.setPrototypeOf ? Object.getPrototypeOf : function(t3) {
            return t3.__proto__ || Object.getPrototypeOf(t3);
          }, z(t2);
        }
        var B = function(t2) {
          !function(t3, e3) {
            if ("function" != typeof e3 && null !== e3)
              throw new TypeError("Super expression must either be null or a function");
            t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), e3 && T(t3, e3);
          }(a2, t2);
          var e2, n2, i2, r2, o2 = (i2 = a2, r2 = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if ("function" == typeof Proxy)
              return true;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), true;
            } catch (t3) {
              return false;
            }
          }(), function() {
            var t3, e3 = z(i2);
            if (r2) {
              var n3 = z(this).constructor;
              t3 = Reflect.construct(e3, arguments, n3);
            } else
              t3 = e3.apply(this, arguments);
            return D(this, t3);
          });
          function a2(t3, e3) {
            var n3;
            return function(t4, e4) {
              if (!(t4 instanceof e4))
                throw new TypeError("Cannot call a class as a function");
            }(this, a2), (n3 = o2.call(this, t3)).imgEl = e3, n3;
          }
          return e2 = a2, (n2 = [{ key: "draw", value: function() {
            I(z(a2.prototype), "draw", this).call(this), this.canvas.ctx.drawImage(this.imgEl, 0, 0, this.particleSize, this.particleSize);
          } }]) && _(e2.prototype, n2), a2;
        }(o);
        function F(t2, e2) {
          for (var n2 = 0; n2 < e2.length; n2++) {
            var i2 = e2[n2];
            i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
          }
        }
        var A = function() {
          function t2() {
            !function(t3, e3) {
              if (!(t3 instanceof e3))
                throw new TypeError("Cannot call a class as a function");
            }(this, t2), this.cachedImages = {};
          }
          var e2, i2;
          return e2 = t2, i2 = [{ key: "createImageElement", value: function(t3) {
            var e3 = document.createElement("img");
            return e3.setAttribute("src", t3), e3;
          } }, { key: "getImageElement", value: function(t3) {
            return this.cachedImages[t3] || (this.cachedImages[t3] = this.createImageElement(t3)), this.cachedImages[t3];
          } }, { key: "getRandomParticle", value: function() {
            var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e3 = t3.particles || [];
            return e3.length < 1 ? {} : e3[Math.floor(Math.random() * e3.length)];
          } }, { key: "getDefaults", value: function() {
            var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return { type: t3.defaultType || "circle", size: t3.defaultSize || 10, dropRate: t3.defaultDropRate || 10, colors: t3.defaultColors || ["DodgerBlue", "OliveDrab", "Gold", "pink", "SlateBlue", "lightblue", "Violet", "PaleGreen", "SteelBlue", "SandyBrown", "Chocolate", "Crimson"], url: null };
          } }, { key: "create", value: function(t3) {
            var e3 = this.getDefaults(t3), i3 = this.getRandomParticle(t3), r2 = Object.assign(e3, i3), o2 = n(0, r2.colors.length - 1, true);
            if (r2.color = r2.colors[o2], "circle" === r2.type)
              return new p(r2);
            if ("rect" === r2.type)
              return new O(r2);
            if ("heart" === r2.type)
              return new M(r2);
            if ("image" === r2.type)
              return new B(r2, this.getImageElement(r2.url));
            throw Error('Unknown particle type: "'.concat(r2.type, '"'));
          } }], i2 && F(e2.prototype, i2), t2;
        }();
        function H(t2, e2) {
          for (var n2 = 0; n2 < e2.length; n2++) {
            var i2 = e2[n2];
            i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
          }
        }
        var L = function() {
          function t2(e3) {
            !function(t3, e4) {
              if (!(t3 instanceof e4))
                throw new TypeError("Cannot call a class as a function");
            }(this, t2), this.items = [], this.pool = [], this.particleOptions = e3, this.particleFactory = new A();
          }
          var e2, n2;
          return e2 = t2, (n2 = [{ key: "update", value: function() {
            var t3, e3 = this, n3 = [], i2 = [];
            this.items.forEach(function(t4) {
              t4.update(), t4.pastBottom() ? t4.remove || (t4.setup(e3.particleOptions), n3.push(t4)) : i2.push(t4);
            }), (t3 = this.pool).push.apply(t3, n3), this.items = i2;
          } }, { key: "draw", value: function() {
            this.items.forEach(function(t3) {
              return t3.draw();
            });
          } }, { key: "add", value: function() {
            this.pool.length > 0 ? this.items.push(this.pool.pop().setup(this.particleOptions)) : this.items.push(this.particleFactory.create(this.particleOptions).setup(this.particleOptions));
          } }, { key: "refresh", value: function() {
            this.items.forEach(function(t3) {
              t3.kill();
            }), this.pool = [];
          } }]) && H(e2.prototype, n2), t2;
        }();
        function G(t2, e2) {
          for (var n2 = 0; n2 < e2.length; n2++) {
            var i2 = e2[n2];
            i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
          }
        }
        var W = function() {
          function t2(e3) {
            !function(t3, e4) {
              if (!(t3 instanceof e4))
                throw new TypeError("Cannot call a class as a function");
            }(this, t2);
            var n3 = "confetti-canvas";
            if (e3 && !(e3 instanceof HTMLCanvasElement))
              throw new Error("Element is not a valid HTMLCanvasElement");
            this.isDefault = !e3, this.canvas = e3 || document.getElementById(n3) || t2.createDefaultCanvas(n3), this.ctx = this.canvas.getContext("2d");
          }
          var e2, n2, i2;
          return e2 = t2, i2 = [{ key: "createDefaultCanvas", value: function(t3) {
            var e3 = document.createElement("canvas");
            return e3.style.display = "block", e3.style.position = "fixed", e3.style.pointerEvents = "none", e3.style.top = 0, e3.style.width = "100vw", e3.style.height = "100vh", e3.id = t3, document.querySelector("body").appendChild(e3), e3;
          } }], (n2 = [{ key: "width", get: function() {
            return this.canvas.width;
          } }, { key: "height", get: function() {
            return this.canvas.height;
          } }, { key: "clear", value: function() {
            this.ctx.setTransform(1, 0, 0, 1, 0, 0), this.ctx.clearRect(0, 0, this.width, this.height);
          } }, { key: "updateDimensions", value: function() {
            this.isDefault && (this.width === window.innerWidth && this.height === window.innerHeight || (this.canvas.width = window.innerWidth, this.canvas.height = window.innerHeight));
          } }]) && G(e2.prototype, n2), i2 && G(e2, i2), t2;
        }();
        function q(t2, e2) {
          for (var n2 = 0; n2 < e2.length; n2++) {
            var i2 = e2[n2];
            i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
          }
        }
        var $ = function() {
          function t2() {
            !function(t3, e3) {
              if (!(t3 instanceof e3))
                throw new TypeError("Cannot call a class as a function");
            }(this, t2), this.setDefaults();
          }
          var e2, n2;
          return e2 = t2, n2 = [{ key: "setDefaults", value: function() {
            this.killed = false, this.framesSinceDrop = 0, this.canvas = null, this.canvasEl = null, this.W = 0, this.H = 0, this.particleManager = null, this.particlesPerFrame = 0, this.wind = 0, this.windSpeed = 1, this.windSpeedMax = 1, this.windChange = 0.01, this.windPosCoef = 2e-3, this.animationId = null;
          } }, { key: "getParticleOptions", value: function(t3) {
            var e3 = { canvas: this.canvas, W: this.W, H: this.H, wind: this.wind, windPosCoef: this.windPosCoef, windSpeedMax: this.windSpeedMax, count: 0 };
            return Object.assign(e3, t3), e3;
          } }, { key: "createParticles", value: function() {
            var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e3 = this.getParticleOptions(t3);
            this.particleManager = new L(e3);
          } }, { key: "getCanvasElementFromOptions", value: function(t3) {
            var e3 = t3.canvasId, n3 = t3.canvasElement, i2 = n3;
            if (n3 && !(n3 instanceof HTMLCanvasElement))
              throw new Error("Invalid options: canvasElement is not a valid HTMLCanvasElement");
            if (e3 && n3)
              throw new Error("Invalid options: canvasId and canvasElement are mutually exclusive");
            if (e3 && !i2 && (i2 = document.getElementById(e3)), e3 && !(i2 instanceof HTMLCanvasElement))
              throw new Error('Invalid options: element with id "'.concat(e3, '" is not a valid HTMLCanvasElement'));
            return i2;
          } }, { key: "start", value: function() {
            var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            this.remove();
            var e3 = this.getCanvasElementFromOptions(t3);
            this.canvas = new W(e3), this.canvasEl = e3, this.createParticles(t3), this.setGlobalOptions(t3), this.animationId = requestAnimationFrame(this.mainLoop.bind(this));
          } }, { key: "setGlobalOptions", value: function(t3) {
            this.particlesPerFrame = t3.particlesPerFrame || 2, this.windSpeedMax = t3.windSpeedMax || 1;
          } }, { key: "stop", value: function() {
            this.killed = true, this.particlesPerFrame = 0;
          } }, { key: "update", value: function(t3) {
            var e3 = this.getCanvasElementFromOptions(t3);
            this.canvas && e3 !== this.canvasEl ? this.start(t3) : (this.setGlobalOptions(t3), this.particleManager && (this.particleManager.particleOptions = this.getParticleOptions(t3), this.particleManager.refresh()));
          } }, { key: "remove", value: function() {
            this.stop(), this.animationId && cancelAnimationFrame(this.animationId), this.canvas && this.canvas.clear(), this.setDefaults();
          } }, { key: "mainLoop", value: function(t3) {
            this.canvas.updateDimensions(), this.canvas.clear(), this.windSpeed = Math.sin(t3 / 8e3) * this.windSpeedMax, this.wind = this.particleManager.particleOptions.wind += this.windChange;
            for (var e3 = this.framesSinceDrop * this.particlesPerFrame; e3 >= 1; )
              this.particleManager.add(), e3 -= 1, this.framesSinceDrop = 0;
            this.particleManager.update(), this.particleManager.draw(), this.killed && !this.particleManager.items.length || (this.animationId = requestAnimationFrame(this.mainLoop.bind(this))), this.framesSinceDrop += 1;
          } }], n2 && q(e2.prototype, n2), t2;
        }();
        const U = { install: function(t2, e2) {
          if (!this.installed) {
            this.installed = true;
            try {
              t2.config.globalProperties.$confetti = new $(e2);
            } catch (n2) {
              t2.prototype.$confetti = new $(e2);
            }
          }
        } };
        return e;
      })();
    });
  }
});
export default require_vue_confetti();
//# sourceMappingURL=vue-confetti.js.map
